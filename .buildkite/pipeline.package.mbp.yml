# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
name: "fleet server package mbp"
env:
  REPO: 'fleet-server'
  SETUP_GVM_VERSION: 'v0.3.0'
  DOCKER_REGISTRY: "docker.elastic.co"
  IMAGE_UBUNTU_X86_64: "family/core-ubuntu-2004"
  IMAGE_UBUNTU_ARM_64: "core-ubuntu-2004-aarch64"

steps:
  - label: "Package x86_64 snapshot"
    # skip building + packaging snapshot for pre-releases (flagged by a non-empty VERSION_QUALIFIER env var/BK param)
    # as prereleases are only intended to be used with staging; details in https://github.com/elastic/ingest-dev/issues/4855
    if: "build.env('VERSION_QUALIFIER') == null"
    key: "package-x86-64-snapshot"
    command: ".buildkite/scripts/package.sh snapshot"
    agents:
      provider: "gcp"
      image: "${IMAGE_UBUNTU_X86_64}"
      machineType: "c2-standard-16"

  - label: "Package x86_64 staging"
    key: "package-x86-64-staging"
    command: ".buildkite/scripts/package.sh staging"
    agents:
      provider: "gcp"
      image: "${IMAGE_UBUNTU_X86_64}"
      machineType: "c2-standard-16"

  - label: "Package aarch64 snapshot"
    if: "build.env('VERSION_QUALIFIER') == null"
    key: "package-arm-snapshot"
    command: ".buildkite/scripts/package.sh snapshot"
    agents:
      provider: "aws"
      imagePrefix: "${IMAGE_UBUNTU_ARM_64}"
      instanceType: "t4g.2xlarge"

  - label: "Package aarch64 staging"
    key: "package-arm-staging"
    command: ".buildkite/scripts/package.sh staging"
    agents:
      provider: "aws"
      imagePrefix: "${IMAGE_UBUNTU_ARM_64}"
      instanceType: "t4g.2xlarge"

  - label: "DRA snapshot"
    if: "${FILE_EXISTS_IN_REPO} && build.env('VERSION_QUALIFIER') == null"
    key: "dra-snapshot"
    command: ".buildkite/scripts/dra_release.sh snapshot"
    agents:
      provider: "gcp"
      image: "${IMAGE_UBUNTU_X86_64}"
      machineType: "c2-standard-16"
    depends_on:
      - step: "package-x86-64-snapshot"
        allow_failure: false
      - step: "package-arm-snapshot"
        allow_failure: false

  - label: "DRA release staging"
    # we don't usually build staging from the main branch, but we exceptionally allow it for prereleases
    # details in https://github.com/elastic/ingest-dev/issues/4855
    if: "${FILE_EXISTS_IN_REPO} == true && (build.env('BUILDKITE_BRANCH') != 'main' || build.env('VERSION_QUALIFIER') != null)"
    key: "dra-staging"
    command: ".buildkite/scripts/dra_release.sh staging"
    agents:
      provider: "gcp"
      image: "${IMAGE_UBUNTU_X86_64}"
      machineType: "c2-standard-16"
    depends_on:
      - step: "package-x86-64-staging"
        allow_failure: false
      - step: "package-arm-staging"
        allow_failure: false
